// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gopher.proto

package protocol

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GopherInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	X                    int32    `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GopherInfo) Reset()         { *m = GopherInfo{} }
func (m *GopherInfo) String() string { return proto.CompactTextString(m) }
func (*GopherInfo) ProtoMessage()    {}
func (*GopherInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_df81d38ec75a57c2, []int{0}
}

func (m *GopherInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GopherInfo.Unmarshal(m, b)
}
func (m *GopherInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GopherInfo.Marshal(b, m, deterministic)
}
func (m *GopherInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GopherInfo.Merge(m, src)
}
func (m *GopherInfo) XXX_Size() int {
	return xxx_messageInfo_GopherInfo.Size(m)
}
func (m *GopherInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GopherInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GopherInfo proto.InternalMessageInfo

func (m *GopherInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GopherInfo) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *GopherInfo) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type LoginRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df81d38ec75a57c2, []int{1}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

type Login struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	X                    int32    `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Login) Reset()         { *m = Login{} }
func (m *Login) String() string { return proto.CompactTextString(m) }
func (*Login) ProtoMessage()    {}
func (*Login) Descriptor() ([]byte, []int) {
	return fileDescriptor_df81d38ec75a57c2, []int{2}
}

func (m *Login) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Login.Unmarshal(m, b)
}
func (m *Login) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Login.Marshal(b, m, deterministic)
}
func (m *Login) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Login.Merge(m, src)
}
func (m *Login) XXX_Size() int {
	return xxx_messageInfo_Login.Size(m)
}
func (m *Login) XXX_DiscardUnknown() {
	xxx_messageInfo_Login.DiscardUnknown(m)
}

var xxx_messageInfo_Login proto.InternalMessageInfo

func (m *Login) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Login) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Login) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type Logout struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Logout) Reset()         { *m = Logout{} }
func (m *Logout) String() string { return proto.CompactTextString(m) }
func (*Logout) ProtoMessage()    {}
func (*Logout) Descriptor() ([]byte, []int) {
	return fileDescriptor_df81d38ec75a57c2, []int{3}
}

func (m *Logout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Logout.Unmarshal(m, b)
}
func (m *Logout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Logout.Marshal(b, m, deterministic)
}
func (m *Logout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Logout.Merge(m, src)
}
func (m *Logout) XXX_Size() int {
	return xxx_messageInfo_Logout.Size(m)
}
func (m *Logout) XXX_DiscardUnknown() {
	xxx_messageInfo_Logout.DiscardUnknown(m)
}

var xxx_messageInfo_Logout proto.InternalMessageInfo

func (m *Logout) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type LogoutResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutResponse) Reset()         { *m = LogoutResponse{} }
func (m *LogoutResponse) String() string { return proto.CompactTextString(m) }
func (*LogoutResponse) ProtoMessage()    {}
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_df81d38ec75a57c2, []int{4}
}

func (m *LogoutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutResponse.Unmarshal(m, b)
}
func (m *LogoutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutResponse.Marshal(b, m, deterministic)
}
func (m *LogoutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutResponse.Merge(m, src)
}
func (m *LogoutResponse) XXX_Size() int {
	return xxx_messageInfo_LogoutResponse.Size(m)
}
func (m *LogoutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutResponse proto.InternalMessageInfo

type Movement struct {
	// Types that are valid to be assigned to Event:
	//	*Movement_Login
	//	*Movement_Logout
	//	*Movement_Info
	Event                isMovement_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Movement) Reset()         { *m = Movement{} }
func (m *Movement) String() string { return proto.CompactTextString(m) }
func (*Movement) ProtoMessage()    {}
func (*Movement) Descriptor() ([]byte, []int) {
	return fileDescriptor_df81d38ec75a57c2, []int{5}
}

func (m *Movement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Movement.Unmarshal(m, b)
}
func (m *Movement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Movement.Marshal(b, m, deterministic)
}
func (m *Movement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Movement.Merge(m, src)
}
func (m *Movement) XXX_Size() int {
	return xxx_messageInfo_Movement.Size(m)
}
func (m *Movement) XXX_DiscardUnknown() {
	xxx_messageInfo_Movement.DiscardUnknown(m)
}

var xxx_messageInfo_Movement proto.InternalMessageInfo

type isMovement_Event interface {
	isMovement_Event()
}

type Movement_Login struct {
	Login *Login `protobuf:"bytes,1,opt,name=login,proto3,oneof"`
}

type Movement_Logout struct {
	Logout *Logout `protobuf:"bytes,2,opt,name=logout,proto3,oneof"`
}

type Movement_Info struct {
	Info *GopherInfo `protobuf:"bytes,3,opt,name=info,proto3,oneof"`
}

func (*Movement_Login) isMovement_Event() {}

func (*Movement_Logout) isMovement_Event() {}

func (*Movement_Info) isMovement_Event() {}

func (m *Movement) GetEvent() isMovement_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *Movement) GetLogin() *Login {
	if x, ok := m.GetEvent().(*Movement_Login); ok {
		return x.Login
	}
	return nil
}

func (m *Movement) GetLogout() *Logout {
	if x, ok := m.GetEvent().(*Movement_Logout); ok {
		return x.Logout
	}
	return nil
}

func (m *Movement) GetInfo() *GopherInfo {
	if x, ok := m.GetEvent().(*Movement_Info); ok {
		return x.Info
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Movement) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Movement_Login)(nil),
		(*Movement_Logout)(nil),
		(*Movement_Info)(nil),
	}
}

func init() {
	proto.RegisterType((*GopherInfo)(nil), "protocol.GopherInfo")
	proto.RegisterType((*LoginRequest)(nil), "protocol.LoginRequest")
	proto.RegisterType((*Login)(nil), "protocol.Login")
	proto.RegisterType((*Logout)(nil), "protocol.Logout")
	proto.RegisterType((*LogoutResponse)(nil), "protocol.LogoutResponse")
	proto.RegisterType((*Movement)(nil), "protocol.Movement")
}

func init() { proto.RegisterFile("gopher.proto", fileDescriptor_df81d38ec75a57c2) }

var fileDescriptor_df81d38ec75a57c2 = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x86, 0x77, 0x95, 0x22, 0x0e, 0x88, 0x64, 0x62, 0x4c, 0x43, 0x3c, 0x90, 0xbd, 0x48, 0x38,
	0x10, 0x53, 0x8d, 0x5e, 0x3c, 0x79, 0x11, 0x13, 0xbc, 0xac, 0x4f, 0xa0, 0x64, 0x40, 0x92, 0x76,
	0xa7, 0xb6, 0xdb, 0x06, 0xde, 0xc3, 0x17, 0xf1, 0x0d, 0x0d, 0xdb, 0xd6, 0xc6, 0xca, 0xc5, 0xd3,
	0xee, 0xcc, 0xff, 0xcf, 0xec, 0xb7, 0x3f, 0xf4, 0x56, 0x1c, 0xbf, 0x53, 0x32, 0x8d, 0x13, 0xb6,
	0x8c, 0x1d, 0x77, 0x2c, 0x38, 0x54, 0xf7, 0x00, 0x8f, 0x4e, 0x79, 0x32, 0x4b, 0x46, 0x84, 0x96,
	0x79, 0x8d, 0xc8, 0x97, 0x23, 0x39, 0x3e, 0xd6, 0xee, 0x8e, 0x3d, 0x90, 0x1b, 0xff, 0x60, 0x24,
	0xc7, 0x9e, 0x96, 0x9b, 0x5d, 0xb5, 0xf5, 0x0f, 0x8b, 0x6a, 0xab, 0xfa, 0xd0, 0x9b, 0xf3, 0x6a,
	0x6d, 0x34, 0x7d, 0x64, 0x94, 0x5a, 0x75, 0x07, 0x9e, 0xab, 0xff, 0xbd, 0xe8, 0x02, 0xda, 0x73,
	0x5e, 0x71, 0x66, 0xf7, 0x4d, 0xaa, 0x01, 0xf4, 0x0b, 0x55, 0x53, 0x1a, 0xb3, 0x49, 0x49, 0x7d,
	0x4a, 0xe8, 0x3c, 0x73, 0x4e, 0x11, 0x19, 0x8b, 0x97, 0xe0, 0x85, 0xbb, 0x57, 0xdd, 0x4c, 0x37,
	0x38, 0x9d, 0x56, 0xbf, 0x9b, 0x3a, 0x98, 0x99, 0xd0, 0x85, 0x8e, 0x13, 0x68, 0x87, 0x6e, 0x8f,
	0xc3, 0xe8, 0x06, 0x83, 0x5f, 0x4e, 0xce, 0xec, 0x4c, 0xe8, 0xd2, 0x81, 0x13, 0x68, 0xad, 0xcd,
	0x92, 0x1d, 0x62, 0x37, 0x38, 0xab, 0x9d, 0x75, 0x5c, 0x33, 0xa1, 0x9d, 0xe7, 0xe1, 0x08, 0x3c,
	0xca, 0xc9, 0xd8, 0xe0, 0x4b, 0xc2, 0x49, 0xa1, 0xbf, 0x50, 0x92, 0xaf, 0x17, 0x84, 0x41, 0xc9,
	0x86, 0xe7, 0x0d, 0xaa, 0x32, 0xb2, 0x61, 0x93, 0x56, 0x09, 0xbc, 0xad, 0x30, 0xf1, 0x0f, 0xe0,
	0xd0, 0x6f, 0x76, 0x7e, 0x22, 0x11, 0x78, 0x03, 0xad, 0x88, 0x73, 0x42, 0xac, 0x3d, 0x55, 0x46,
	0xc3, 0x3d, 0x3d, 0x25, 0xc6, 0xf2, 0x4a, 0xbe, 0xb5, 0x9d, 0x70, 0xfd, 0x1d, 0x00, 0x00, 0xff,
	0xff, 0x78, 0xed, 0xa1, 0x4d, 0x22, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GopherServiceClient is the client API for GopherService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GopherServiceClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Login, error)
	Logout(ctx context.Context, in *Logout, opts ...grpc.CallOption) (*LogoutResponse, error)
	Move(ctx context.Context, opts ...grpc.CallOption) (GopherService_MoveClient, error)
}

type gopherServiceClient struct {
	cc *grpc.ClientConn
}

func NewGopherServiceClient(cc *grpc.ClientConn) GopherServiceClient {
	return &gopherServiceClient{cc}
}

func (c *gopherServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Login, error) {
	out := new(Login)
	err := c.cc.Invoke(ctx, "/protocol.GopherService/login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gopherServiceClient) Logout(ctx context.Context, in *Logout, opts ...grpc.CallOption) (*LogoutResponse, error) {
	out := new(LogoutResponse)
	err := c.cc.Invoke(ctx, "/protocol.GopherService/logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gopherServiceClient) Move(ctx context.Context, opts ...grpc.CallOption) (GopherService_MoveClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GopherService_serviceDesc.Streams[0], "/protocol.GopherService/move", opts...)
	if err != nil {
		return nil, err
	}
	x := &gopherServiceMoveClient{stream}
	return x, nil
}

type GopherService_MoveClient interface {
	Send(*Movement) error
	Recv() (*Movement, error)
	grpc.ClientStream
}

type gopherServiceMoveClient struct {
	grpc.ClientStream
}

func (x *gopherServiceMoveClient) Send(m *Movement) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gopherServiceMoveClient) Recv() (*Movement, error) {
	m := new(Movement)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GopherServiceServer is the server API for GopherService service.
type GopherServiceServer interface {
	Login(context.Context, *LoginRequest) (*Login, error)
	Logout(context.Context, *Logout) (*LogoutResponse, error)
	Move(GopherService_MoveServer) error
}

// UnimplementedGopherServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGopherServiceServer struct {
}

func (*UnimplementedGopherServiceServer) Login(ctx context.Context, req *LoginRequest) (*Login, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedGopherServiceServer) Logout(ctx context.Context, req *Logout) (*LogoutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (*UnimplementedGopherServiceServer) Move(srv GopherService_MoveServer) error {
	return status.Errorf(codes.Unimplemented, "method Move not implemented")
}

func RegisterGopherServiceServer(s *grpc.Server, srv GopherServiceServer) {
	s.RegisterService(&_GopherService_serviceDesc, srv)
}

func _GopherService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GopherServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.GopherService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GopherServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GopherService_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Logout)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GopherServiceServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.GopherService/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GopherServiceServer).Logout(ctx, req.(*Logout))
	}
	return interceptor(ctx, in, info, handler)
}

func _GopherService_Move_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GopherServiceServer).Move(&gopherServiceMoveServer{stream})
}

type GopherService_MoveServer interface {
	Send(*Movement) error
	Recv() (*Movement, error)
	grpc.ServerStream
}

type gopherServiceMoveServer struct {
	grpc.ServerStream
}

func (x *gopherServiceMoveServer) Send(m *Movement) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gopherServiceMoveServer) Recv() (*Movement, error) {
	m := new(Movement)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GopherService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.GopherService",
	HandlerType: (*GopherServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "login",
			Handler:    _GopherService_Login_Handler,
		},
		{
			MethodName: "logout",
			Handler:    _GopherService_Logout_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "move",
			Handler:       _GopherService_Move_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "gopher.proto",
}
